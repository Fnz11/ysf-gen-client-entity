"use server";
import {{entityNameCap}}Client from "@/components/Dashboard/{{entityNameCap}}/{{entityNameCap}}Client";
import PageContainer from "@/components/Layout/PageContainer";
import TablelClientSkeleton from "@/components/Skeletons/TablelClientSkeleton";
import { Breadcrumbs } from "@/components/ui/breadcrumbs";
import { getAll{{entityNameCap}} } from "@/utils/{{entityName}}-api";
import { cookies } from "next/headers";
import React, { Suspense } from "react";

const breadcrumbItems = [
  { title: "Dashboard", link: "/" },
  { title: "{{entityNameCap}}", link: "/{{entityName}}" },
];

const {{entityNameCap}} = async ({
  searchParams,
}: {
  searchParams: {{entityNameCap}}SearchParamsProps;
}) => {
  const token = cookies().get("session")?.value;

  {{#each fieldsFilter}}
  const {{key}}_q = searchParams.{{key}} || "{{#if (eq key "page")}}1{{else if (eq key "limit")}}10{{/if}}";
  {{/each}}  

  // Fetch data from the backend
  let {{entityName}}: any = {
    data: {
      data: {
        {{entityName}}: [],
        totalData: 0,
      },
    },
  };
  try {
    {{entityName}} = await getAll{{entityNameCap}}({
      {{#each fieldsFilter}}
      {{key}}: {{key}}_q{{#if (eq type "boolean")}}== "-" ? "":{{key}}_q{{/if}},
      {{/each}}  
    }, token);
  } catch (error) {
    console.log(error);
  }

  return (
    <PageContainer className="space-y-4 w-full">
      {/* Breadcrumbs */}
      <Breadcrumbs items={breadcrumbItems} />

      <Suspense
        fallback={<TablelClientSkeleton />}
        key={
        {{#each fieldsFilter}} {{#if (eq ../searchField key)}} {{else}} {{key}}_q +
        {{/if}}{{/each}} ""
        }
      >
        <{{entityNameCap}}Client initialData={ {{entityName}}?.data?.data} />
      </Suspense>
    </PageContainer>
  );
};

export default {{entityNameCap}};
