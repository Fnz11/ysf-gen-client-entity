import { create } from "zustand";
import { persist } from "zustand/middleware";

const {{entityName}}Store = (set: any) => ({
  global{{entityNameCap}}Data: [] as {{entityNameCap}}Props[],
  refetch: null as any,
  selectedIdInfo: "",
  isSelectedRow: false,
  handleSelectInfo: () => ({} as { handleSelectInfo: () => void }),
  openInfo: false,
  setGlobal{{entityNameCap}}Data: ({{entityName}}: {{entityNameCap}}Props[]) =>
    set((state: { globalDdcData: {{entityNameCap}}Props[] }) => ({
      ...state,
      global{{entityNameCap}}Data: {{entityName}},
    })),
  setRefetch: (refetch: any) =>
    set((state: { refetch: any }) => ({
      ...state,
      refetch,
    })),
  setSelectedIdInfo: (id: string) =>
    set((state: { selectedIdInfo: string }) => ({
      ...state,
      selectedIdInfo: id,
    })),
  setOpenInfo: (open: boolean) =>
    set((state: { openInfo: boolean }) => ({
      ...state,
      openInfo: open,
    })),
  setHandleSelectInfo: (handleSelectInfo: () => void) =>
    set((state: { handleSelectInfo: () => void }) => ({
      ...state,
      handleSelectInfo,
    })),
  setIsSelectedRowInfo: (isSelectedRow: boolean) =>
    set((state: { isSelectedRow: boolean }) => ({
      ...state,
      isSelectedRow,
    })),
});

export const use{{entityNameCap}}Store = create(
  persist({{entityName}}Store, {
    name: "{{entityName}}-store",
  })
);
